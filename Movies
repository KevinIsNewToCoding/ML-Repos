import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.neighbors import NearestNeighbors

# Load the dataset
movies = pd.read_csv('movies.csv')
ratings = pd.read_csv('ratings.csv')

# Merge the movies and ratings data
data = pd.merge(ratings, movies, on='movieId')

# Create a pivot table with users as rows and movies as columns
user_movie_matrix = data.pivot_table(index='userId', columns='title', values='rating')

# Fill missing values with 0
user_movie_matrix.fillna(0, inplace=True)

# Calculate the cosine similarity between users
user_similarity = cosine_similarity(user_movie_matrix)

# Convert to DataFrame
user_similarity_df = pd.DataFrame(user_similarity, index=user_movie_matrix.index, columns=user_movie_matrix.index)

# Recommendation function
def recommend_movies(user_id, num_recommendations=5):
    user_idx = user_id - 1  # Adjust for 0-indexing
    similar_users = user_similarity_df[user_idx].sort_values(ascending=False).index[1:num_recommendations+1]
    
    recommended_movies = []
    for user in similar_users:
        watched_movies = user_movie_matrix.columns[user_movie_matrix.iloc[user] > 0]
        recommended_movies.extend(watched_movies)
    
    # Remove movies already watched by the user
    user_watched_movies = set(user_movie_matrix.columns[user_movie_matrix.iloc[user_idx] > 0])
    recommended_movies = [movie for movie in recommended_movies if movie not in user_watched_movies]
    
    return list(set(recommended_movies))[:num_recommendations]

# Example usage
print(recommend_movies(user_id=1))
